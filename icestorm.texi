\input texinfo
@c %**start of header
@setfilename icestorm.info
@include version.texi
@settitle IceStorm Learner's Documentation
@documentencoding UTF-8
@c %**end of header

@copying
@strong{This manual is work-in-progress.  You can find the official
IceStorm documentation @uref{http://www.clifford.at/icestorm/#docs,
here}.}

Copyright @copyright{} 2017 Roland Lutz

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
A copy of the license is included in the section entitled ``GNU Free
Documentation License''.
@end quotation
@end copying

@titlepage
@title IceStorm Learner's Documentation
@author Roland Lutz
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@ifnottex
@node Top
@top IceStorm

@insertcopying
@end ifnottex

@c Additional general information.

@menu
* Introduction::
@c * Lattice iCE40 1K and 8K FPGAs::
@c * Crash Course to Verilog::
@c * Writing Designs for iCE40 FPGAs::
@c * The Build Process::
@c * Using the IceStorm Tools on the Bitstream::
@c * Programing the FPGA::
@c * Communicating with the FPGA::
* GNU Free Documentation License:: Copying this manual.
* Index:: Complete index
@end menu

@c ============================================================================

@node Introduction
@unnumbered Introduction

IceStorm has an excellent reference documentation of the 1K and 8K
bitstreams as well as a few additional pages explaining the various
tiles and the binary bitstream format.  However, for a reader not
already familiar with IceStorm or the iCE40 FPGA, it would be helpful
if a more introduction-like documentation was available.

This document is intended to become this documentation for the
IceStorm project and to contain all information which is useful for
working with it.  It follows the guidelines for GNU documentation
(@pxref{Documentation,, Documenting Programs, standards, GNU Coding
Standards}).

@c ============================================================================

@c @node Lattice iCE40 1K and 8K FPGAs
@c @chapter Lattice iCE40 1K and 8K FPGAs

@c ============================================================================

@c @node Crash Course to Verilog
@c @chapter A Bitstream-o-naut's Crash Course to Verilog
@c
@c This document cannot be a substitute for a proper Verilog
@c introduction.  However, already a small subset of Verilog is
@c sufficient to experiment with the bitstream and understand the Verilog
@c code generated by IceStorm.  This chapter focuses on an understanding
@c of this subset and how it relates to the instantiated hardware on the
@c FPGA.
@c
@c @node Hello world
@c @section Hello world
@c
@c @example
@c `default_nettype none
@c
@c module top(input Pmod1, output D5);
@c   assign D5 = Pmod1;
@c endmodule
@c @end example
@c
@c @node Blocking logic
@c @section Blocking logic
@c
@c @subsection Wires
@c
@c @subsection Registers
@c
@c @subsection Logic operations
@c
@c @node Non-blocking logic
@c @section Non-blocking logic
@c
@c @subsection @code{always @@(@dots{})}
@c
@c @subsection Control structures
@c
@c @subsection Special case: @code{always @@(*)}
@c
@c @node Modules
@c @section Modules
@c
@c @c Including files?

@c ============================================================================

@c @node Writing Designs for iCE40 FPGAs
@c @chapter Writing Designs for iCE40 FPGAs

@c ============================================================================

@c @node The Build Process
@c @chapter The Build Process
@c
@c @node Synthesizing a Design with Yosys
@c @section Synthesizing a Design with Yosys
@c
@c @node Generating a Bitstream with @code{arachne-pnr}
@c @section Generating a Bitstream with @code{arachne-pnr}

@c ============================================================================

@c @node Using the IceStorm Tools on the Bitstream
@c @chapter Using the IceStorm Tools on the Bitstream
@c
@c @menu
@c @c * icebox_chipdb Invocation:: Invoking the @code{icebox_chipdb} Program
@c @c * icebox_colbuf Invocation:: Invoking the @code{icebox_colbuf} Program
@c @c * icebox_diff Invocation:: Invoking the @code{icebox_diff} Program
@c @c * icebox_explain Invocation:: Invoking the @code{icebox_explain} Program
@c @c * icebox_html Invocation:: Invoking the @code{icebox_html} Program
@c @c * icebox_maps Invocation:: Invoking the @code{icebox_maps} Program
@c @c * icebox_stat Invocation:: Invoking the @code{icebox_stat} Program
@c @c * icebox_vlog Invocation:: Invoking the @code{icebox_vlog} Program
@c @c * icebram Invocation:: Invoking the @code{icebram} Program
@c @c * icemulti Invocation:: Invoking the @code{icemulti} Program
@c @c * ice[un]pack Invocation:: Invoking the @code{ice[un]pack} Program
@c @c * icepll Invocation:: Invoking the @code{icepll} Program
@c @c * icetime Invocation:: Invoking the @code{icetime} Program
@c @end menu

@c @node icebox_chipdb Invocation
@c @section Invoking the @code{icebox_chipdb} Program
@c
@c @include usage/icebox_chipdb.texi

@c @node icebox_colbuf Invocation
@c @section Invoking the @code{icebox_colbuf} Program
@c
@c @include usage/icebox_colbuf.texi

@c @node icebox_diff Invocation
@c @section Invoking the @code{icebox_diff} Program
@c
@c @include usage/icebox_diff.texi

@c @node icebox_explain Invocation
@c @section Invoking the @code{icebox_explain} Program
@c
@c @include usage/icebox_explain.texi

@c @node icebox_html Invocation
@c @section Invoking the @code{icebox_html} Program
@c
@c @include usage/icebox_html.texi

@c @node icebox_maps Invocation
@c @section Invoking the @code{icebox_maps} Program
@c
@c @include usage/icebox_maps.texi

@c @node icebox_stat Invocation
@c @section Invoking the @code{icebox_stat} Program
@c
@c @include usage/icebox_stat.texi

@c @node icebox_vlog Invocation
@c @section Invoking the @code{icebox_vlog} Program
@c
@c @include usage/icebox_vlog.texi

@c @node icebram Invocation
@c @section Invoking the @code{icebram} Program
@c
@c @include usage/icebram.texi

@c @node icemulti Invocation
@c @section Invoking the @code{icemulti} Program
@c
@c @include usage/icemulti.texi

@c @node ice[un]pack Invocation
@c @section Invoking the @code{ice[un]pack} Program
@c
@c @include usage/ice[un]pack.texi

@c @node icepll Invocation
@c @section Invoking the @code{icepll} Program
@c
@c @include usage/icepll.texi

@c @node icetime Invocation
@c @section Invoking the @code{icetime} Program
@c
@c @include usage/icetime.texi

@c ============================================================================

@c @node Programing the FPGA
@c @chapter Programing the FPGA
@c
@c @menu
@c @c * iceprog Invocation:: Invoking the @code{iceprog} Program
@c @end menu

@c @node iceprog Invocation
@c @section Invoking the @code{iceprog} Program
@c
@c @include usage/iceprog.texi

@c ============================================================================

@c @node Communicating with the FPGA
@c @chapter Communicating with the FPGA

@c ============================================================================

@node GNU Free Documentation License
@appendix GNU Free Documentation License

@include fdl-1.3.texi


@node Index
@unnumbered Index

@printindex cp

@bye
